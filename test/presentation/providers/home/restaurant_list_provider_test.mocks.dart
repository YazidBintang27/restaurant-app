// Mocks generated by Mockito 5.4.5 from annotations
// in restaurant_app/test/presentation/providers/home/restaurant_list_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_app/data/remote/models/request/restaurant_add_review_request.dart'
    as _i9;
import 'package:restaurant_app/data/remote/models/response/restaurant_add_review.dart'
    as _i6;
import 'package:restaurant_app/data/remote/models/response/restaurant_detail.dart'
    as _i4;
import 'package:restaurant_app/data/remote/models/response/restaurant_list.dart'
    as _i3;
import 'package:restaurant_app/data/remote/models/response/restaurant_search.dart'
    as _i5;
import 'package:restaurant_app/data/remote/service/api_service.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRestaurantList_1 extends _i1.SmartFake
    implements _i3.RestaurantList {
  _FakeRestaurantList_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRestaurantDetail_2 extends _i1.SmartFake
    implements _i4.RestaurantDetail {
  _FakeRestaurantDetail_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRestaurantSearch_3 extends _i1.SmartFake
    implements _i5.RestaurantSearch {
  _FakeRestaurantSearch_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRestaurantAddReview_4 extends _i1.SmartFake
    implements _i6.RestaurantAddReview {
  _FakeRestaurantAddReview_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i7.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio =>
      (super.noSuchMethod(
            Invocation.getter(#dio),
            returnValue: _FakeDio_0(this, Invocation.getter(#dio)),
          )
          as _i2.Dio);

  @override
  set dio(_i2.Dio? _dio) => super.noSuchMethod(
    Invocation.setter(#dio, _dio),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<_i3.RestaurantList> getListRestaurant() =>
      (super.noSuchMethod(
            Invocation.method(#getListRestaurant, []),
            returnValue: _i8.Future<_i3.RestaurantList>.value(
              _FakeRestaurantList_1(
                this,
                Invocation.method(#getListRestaurant, []),
              ),
            ),
          )
          as _i8.Future<_i3.RestaurantList>);

  @override
  _i8.Future<_i4.RestaurantDetail> getDetailRestaurant(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getDetailRestaurant, [id]),
            returnValue: _i8.Future<_i4.RestaurantDetail>.value(
              _FakeRestaurantDetail_2(
                this,
                Invocation.method(#getDetailRestaurant, [id]),
              ),
            ),
          )
          as _i8.Future<_i4.RestaurantDetail>);

  @override
  _i8.Future<_i5.RestaurantSearch> searchRestaurant(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchRestaurant, [query]),
            returnValue: _i8.Future<_i5.RestaurantSearch>.value(
              _FakeRestaurantSearch_3(
                this,
                Invocation.method(#searchRestaurant, [query]),
              ),
            ),
          )
          as _i8.Future<_i5.RestaurantSearch>);

  @override
  _i8.Future<_i6.RestaurantAddReview> addReviewRestaurant(
    _i9.RestaurantAddReviewRequest? restaurantAddReview,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addReviewRestaurant, [restaurantAddReview]),
            returnValue: _i8.Future<_i6.RestaurantAddReview>.value(
              _FakeRestaurantAddReview_4(
                this,
                Invocation.method(#addReviewRestaurant, [restaurantAddReview]),
              ),
            ),
          )
          as _i8.Future<_i6.RestaurantAddReview>);
}
